import 'package:flutter/material.dart';

void main() {
  runApp(BMICalculator());
}

class BMICalculator extends StatelessWidget {
  @override
  Widget build(BuildContext context) {
    return MaterialApp(
      home: Scaffold(
        appBar: AppBar(
          title: Text('BMI Calculator'),
        ),
        body: BMICalculatorScreen(),
      ),
    );
  }
}

class BMICalculatorScreen extends StatefulWidget {
  @override
  _BMICalculatorScreenState
  createState() => _BMICalculatorScreenState();
}

class _BMICalculatorScreenState extends State<BMICalculatorScreen> {
  TextEditingController heightController = TextEditingController();
  TextEditingController weightController = TextEditingController();
  double height = 170;
  double weight = 70;
  double bmi = 0;
  String bmiResult = '';

  void calculateBMI() {
    setState(() {
      height = double.tryParse(heightController.text) ?? height;
      weight = double.tryParse(weightController.text) ?? weight;
      bmi = weight / ((height / 100) * (height / 100));

      if (bmi < 18.5) {
        bmiResult = 'Underweight';
      } else if (bmi >= 18.5 && bmi < 25) {
        bmiResult = 'Normal weight';
      } else if (bmi >= 25 && bmi < 30) {
        bmiResult = 'Overweight';
      } else {
        bmiResult = 'Obese';
      }
    });
  }

  @override
  Widget build(BuildContext context) {
    return Padding(
      padding: const EdgeInsets.all(20.0),
      child: Column(
        mainAxisAlignment: MainAxisAlignment.center,
        children: <Widget>[
          Text(
            'Calculate your BMI',
            style:
            TextStyle(fontSize: 24, fontWeight: FontWeight.bold),
          ),
          SizedBox(height: 20),
          Row(
            mainAxisAlignment: MainAxisAlignment.spaceBetween,
            children: <Widget>[
              Text('Height (cm):'),
              Expanded(
                child: TextField(
                  controller: heightController,
                  keyboardType: TextInputType.number,
                  decoration: InputDecoration(hintText: 'Enter height'),
                ),
              ),
            ],
          ),
          Slider(
            value: height,
            min: 100,
            max: 250,
            onChanged: (newValue) {
              setState(() {
                height = newValue;
                heightController.text = newValue.toStringAsFixed(0
                );
              });
            },
          ),
          SizedBox(height: 20),
          Row(
            mainAxisAlignment: MainAxisAlignment.spaceBetween,
            children: <Widget>[
              Text('Weight (kg):'),
              Expanded(
                child: TextField(
                  controller: weightController,
                  keyboardType: TextInputType.number,
                  decoration: InputDecoration(hintText: 'Enter weight'),
                ),
              ),
            ],
          ),
          Slider(
            value: weight,
            min: 30,
            max: 150,
            onChanged: (newValue) {
              setState(() {
                weight = newValue;
                weightController.text = newValue.toStringAsFixed(0);
              });
            },
          ),
          SizedBox(height: 20),
          ElevatedButton(
            onPressed: () {
              calculateBMI();
              showDialog(
                context: context,
                builder: (BuildContext context) {
                  return AlertDialog(
                    title: Text('Your BMI is'),
                    content: Column(
                      mainAxisSize: MainAxisSize.min,
                      crossAxisAlignment: CrossAxisAlignment.start,
                      children: [
                        Text(bmi.toStringAsFixed(1)),
                        SizedBox(height: 10),
                        Text('Result: $bmiResult'),
                      ],
                    ),
                    actions: <Widget>[
                      TextButton(
                        onPressed: () {
                          Navigator.of(context).pop();
                        },
                        child: Text('OK'),
                      ),
                    ],
                  );
                },
              );
            },
            child: Text('Calculate'),
          ),
        ],
      ),
    );
  }
}